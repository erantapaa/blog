---

title:  "Binary Exponentiation"
date:   2015-06-01 12:00:00
categories: algorithms math
---

### Algorithm description

Finding $$a^n$$ involves doing $$n$$ multiplications of $$a$$, the same operation can be done in $$O(log(n))$$ multiplications

For any number $$a$$ raised to an **even** power:

$$
a^n = (a^{n/2})^2 = a^{n/2} \cdot a^{n/2}
$$

For any number $$a$$ rasied to an **odd** power:

$$
a^n = a^{n - 1} \cdot a
$$

### Implementation

Time complexity: $$O(log(n))$$

```cpp
{% include code/math/binaryExponentiation.cpp %}
```
